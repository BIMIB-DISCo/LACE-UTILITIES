# load required libraries#
library("TRONCO")#
#
# list of manually verified mutations#
verified_genes = c("ARPC2","COL1A2","PCBP1","PRAME","RPL5")#
depth_minimum = 3 # minimum depth to set values to NA#
# load data#
cells_aggregate_info <- readRDS(file=paste0("cells_aggregate_info.rds"))#
snpMut_filt_freq <- readRDS(file=paste0("snpMut_filt_freq.rds"))#
depth = as.matrix(read.table("final_data_depth.txt"))#
#
# select only verified mutations#
snpMut_filt_freq = snpMut_filt_freq[which(snpMut_filt_freq$Gene%in%verified_genes),c("scID","Time","Gene","Chr","PosStart","PosEnd","REF","ALT","MutType","depth","Allele_Ratio")]#
snpMut_filt_freq = snpMut_filt_freq[order(snpMut_filt_freq[,3],snpMut_filt_freq[,4],snpMut_filt_freq[,5],snpMut_filt_freq[,6],snpMut_filt_freq[,7],snpMut_filt_freq[,8],snpMut_filt_freq[,9],snpMut_filt_freq[,1],snpMut_filt_freq[,2],snpMut_filt_freq[,10],snpMut_filt_freq[,11]),]#
#
# compute frequence of each mutation#
distinct_mutations = unique(snpMut_filt_freq[,c("Gene","Chr","PosStart","PosEnd","REF","ALT","ALT","ALT","ALT","ALT","ALT","ALT")])#
colnames(distinct_mutations)[7] = "FreqT1"#
colnames(distinct_mutations)[8] = "FreqT2"#
colnames(distinct_mutations)[9] = "FreqT3"#
colnames(distinct_mutations)[10] = "FreqT4"#
colnames(distinct_mutations)[11] = "MedianDepth"#
colnames(distinct_mutations)[12] = "MedianDepthMut"#
cells_timepoints = unique(snpMut_filt_freq[,c("scID","Time")])#
distinct_mutations$FreqT1 = NA#
distinct_mutations$FreqT2 = NA#
distinct_mutations$FreqT3 = NA#
distinct_mutations$FreqT4 = NA#
distinct_mutations$MedianDepth = NA#
distinct_mutations$MedianDepthMut = NA#
t1 = as.numeric(table(cells_timepoints$Time)["before treatment"])#
t2 = as.numeric(table(cells_timepoints$Time)["4d on treatment"])#
t3 = as.numeric(table(cells_timepoints$Time)["28d on treatment"])#
t4 = as.numeric(table(cells_timepoints$Time)["57d on treatment"])#
for(i in 1:nrow(distinct_mutations)) {#
    curr = snpMut_filt_freq[which(snpMut_filt_freq$Gene%in%distinct_mutations[i,"Gene"]&snpMut_filt_freq$Chr%in%distinct_mutations[i,"Chr"]&snpMut_filt_freq$PosStart%in%distinct_mutations[i,"PosStart"]&snpMut_filt_freq$PosEnd%in%distinct_mutations[i,"PosEnd"]&snpMut_filt_freq$REF%in%distinct_mutations[i,"REF"]&snpMut_filt_freq$ALT%in%distinct_mutations[i,"ALT"]),]#
    distinct_mutations[i,"FreqT1"] = as.numeric(table(curr$Time)["before treatment"]) / t1#
    distinct_mutations[i,"FreqT2"] = as.numeric(table(curr$Time)["4d on treatment"]) / t2#
    distinct_mutations[i,"FreqT3"] = as.numeric(table(curr$Time)["28d on treatment"]) / t3#
    distinct_mutations[i,"FreqT4"] = as.numeric(table(curr$Time)["57d on treatment"]) / t4#
    distinct_mutations[i,"MedianDepth"] = as.numeric(median(curr$depth))#
    distinct_mutations[i,"MedianDepthMut"] = as.numeric(median(curr$Allele_Ratio))#
}
distinct_mutations
dim(distinct_mutations)
distinct_mutations
# load required libraries#
library("TRONCO")#
#
# list of manually verified mutations#
verified_genes = c("ARPC2","COL1A2","PCBP1","PRAME","RPL5")#
depth_minimum = 3 # minimum depth to set values to NA#
# load data#
cells_aggregate_info <- readRDS(file=paste0("cells_aggregate_info.rds"))#
snpMut_filt_freq <- readRDS(file=paste0("snpMut_filt_freq.rds"))#
depth = as.matrix(read.table("final_data_depth.txt"))#
#
# select only verified mutations#
snpMut_filt_freq = snpMut_filt_freq[which(snpMut_filt_freq$Gene%in%verified_genes),c("scID","Time","Gene","Chr","PosStart","PosEnd","REF","ALT","MutType","depth","Allele_Ratio")]#
snpMut_filt_freq = snpMut_filt_freq[order(snpMut_filt_freq[,3],snpMut_filt_freq[,4],snpMut_filt_freq[,5],snpMut_filt_freq[,6],snpMut_filt_freq[,7],snpMut_filt_freq[,8],snpMut_filt_freq[,9],snpMut_filt_freq[,1],snpMut_filt_freq[,2],snpMut_filt_freq[,10],snpMut_filt_freq[,11]),]#
#
# compute frequence of each mutation#
distinct_mutations = unique(snpMut_filt_freq[,c("Gene","Chr","PosStart","PosEnd","REF","ALT","ALT","ALT","ALT","ALT","ALT","ALT")])#
colnames(distinct_mutations)[7] = "FreqT1"#
colnames(distinct_mutations)[8] = "FreqT2"#
colnames(distinct_mutations)[9] = "FreqT3"#
colnames(distinct_mutations)[10] = "FreqT4"#
colnames(distinct_mutations)[11] = "MedianDepth"#
colnames(distinct_mutations)[12] = "MedianDepthMut"#
cells_timepoints = unique(snpMut_filt_freq[,c("scID","Time")])#
distinct_mutations$FreqT1 = NA#
distinct_mutations$FreqT2 = NA#
distinct_mutations$FreqT3 = NA#
distinct_mutations$FreqT4 = NA#
distinct_mutations$MedianDepth = NA#
distinct_mutations$MedianDepthMut = NA#
t1 = as.numeric(table(cells_timepoints$Time)["before treatment"])#
t2 = as.numeric(table(cells_timepoints$Time)["4d on treatment"])#
t3 = as.numeric(table(cells_timepoints$Time)["28d on treatment"])#
t4 = as.numeric(table(cells_timepoints$Time)["57d on treatment"])#
for(i in 1:nrow(distinct_mutations)) {#
    curr = snpMut_filt_freq[which(snpMut_filt_freq$Gene%in%distinct_mutations[i,"Gene"]&snpMut_filt_freq$Chr%in%distinct_mutations[i,"Chr"]&snpMut_filt_freq$PosStart%in%distinct_mutations[i,"PosStart"]&snpMut_filt_freq$PosEnd%in%distinct_mutations[i,"PosEnd"]&snpMut_filt_freq$REF%in%distinct_mutations[i,"REF"]&snpMut_filt_freq$ALT%in%distinct_mutations[i,"ALT"]),]#
    distinct_mutations[i,"FreqT1"] = as.numeric(table(curr$Time)["before treatment"]) / t1#
    distinct_mutations[i,"FreqT2"] = as.numeric(table(curr$Time)["4d on treatment"]) / t2#
    distinct_mutations[i,"FreqT3"] = as.numeric(table(curr$Time)["28d on treatment"]) / t3#
    distinct_mutations[i,"FreqT4"] = as.numeric(table(curr$Time)["57d on treatment"]) / t4#
    distinct_mutations[i,"MedianDepth"] = as.numeric(median(curr$depth))#
    distinct_mutations[i,"MedianDepthMut"] = as.numeric(median(curr$Allele_Ratio))#
}#
valid_distinct_mutations = distinct_mutations[c(1,2,5,6,7),]#
valid_distinct_mutations_values = NULL#
for(i in 1:nrow(valid_distinct_mutations)) {#
    valid_distinct_mutations_values = c(valid_distinct_mutations_values,paste0(valid_distinct_mutations[i,c("Chr","PosStart")],collapse="_"))#
}
valid_distinct_mutations_values
length(valid_distinct_mutations_values)
valid_distinct_mutations
ls()
head(cells_aggregate_info)
length(unique(cells_aggregate_info$scID))
sort(unique(cells_aggregate_info$scID))
valid_distinct_mutations
valid_distinct_mutations_values
paste0(valid_distinct_mutations$Gene,"_",valid_distinct_mutations_values)
paste0(valid_distinct_mutations$Gene,"_",valid_distinct_mutations_values,"_",valid_distinct_mutations$REF,"_",valid_distinct_mutations$ALT)
mutations = array(0,c(length(unique(cells_aggregate_info$scID)),5))#
rownames(mutations) = sort(unique(cells_aggregate_info$scID))#
colnames(mutations) = paste0(valid_distinct_mutations$Gene,"_",valid_distinct_mutations_values,"_",valid_distinct_mutations$REF,"_",valid_distinct_mutations$ALT)
head(mutations)
mutations
valid_distinct_mutations
nrow(valid_distinct_mutations)
curr_gene = valid_distinct_mutations[i,"Gene"]
curr_gene
# make final mutations data structures#
mutations = array(0,c(length(unique(cells_aggregate_info$scID)),5))#
rownames(mutations) = sort(unique(cells_aggregate_info$scID))#
colnames(mutations) = paste0(valid_distinct_mutations$Gene,"_",valid_distinct_mutations_values,"_",valid_distinct_mutations$REF,"_",valid_distinct_mutations$ALT)#
for(i in 1:nrow(valid_distinct_mutations)) {#
	curr_gene = valid_distinct_mutations[i,"Gene"]#
	curr_chr = valid_distinct_mutations[i,"Chr"]#
	curr_start = valid_distinct_mutations[i,"PosStart"]#
	curr_end = valid_distinct_mutations[i,"PosEnd"]#
	curr_ref = valid_distinct_mutations[i,"REF"]#
	curr_alt = valid_distinct_mutations[i,"ALT"]#
}
curr_gene
curr_chr
curr_start
curr_end
curr_ref
curr_alt
head(cells_aggregate_info)
curr_mutant_cells = which(cells_aggregate_info$Gene==curr_gene&cells_aggregate_info$Chr==curr_chr&cells_aggregate_info$PosStart==curr_start&cells_aggregate_info$PosEnd==curr_end&cells_aggregate_info$REF==curr_ref&cells_aggregate_info$ALT==curr_alt)
curr_mutant_cells
length(curr_mutant_cells)
curr_mutant_cells = cells_aggregate_info$scID[curr_mutant_cells]
curr_mutant_cells
mutations[curr_mutant_cells,i]
# make final mutations data structures#
mutations = array(0,c(length(unique(cells_aggregate_info$scID)),5))#
rownames(mutations) = sort(unique(cells_aggregate_info$scID))#
colnames(mutations) = paste0(valid_distinct_mutations$Gene,"_",valid_distinct_mutations_values,"_",valid_distinct_mutations$REF,"_",valid_distinct_mutations$ALT)#
for(i in 1:nrow(valid_distinct_mutations)) {#
	curr_gene = valid_distinct_mutations[i,"Gene"]#
	curr_chr = valid_distinct_mutations[i,"Chr"]#
	curr_start = valid_distinct_mutations[i,"PosStart"]#
	curr_end = valid_distinct_mutations[i,"PosEnd"]#
	curr_ref = valid_distinct_mutations[i,"REF"]#
	curr_alt = valid_distinct_mutations[i,"ALT"]#
	curr_mutant_cells = which(cells_aggregate_info$Gene==curr_gene&cells_aggregate_info$Chr==curr_chr&cells_aggregate_info$PosStart==curr_start&cells_aggregate_info$PosEnd==curr_end&cells_aggregate_info$REF==curr_ref&cells_aggregate_info$ALT==curr_alt)#
	curr_mutant_cells = cells_aggregate_info$scID[curr_mutant_cells]#
	mutations[curr_mutant_cells,i] = 1#
}
head(mutations)
sum(mutations)
dim(mutations)
1254/(674*6)
1254/(674*5)
colnames(mutations)
valid_distinct_mutations_values
depth = depth[,valid_distinct_mutations_values]#
colnames(depth) = colnames(mutations)
depth = depth[,valid_distinct_mutations_values]#
rownames(depth) = rownames(mutations)
# load required libraries#
library("TRONCO")#
#
# list of manually verified mutations#
verified_genes = c("ARPC2","COL1A2","PCBP1","PRAME","RPL5")#
depth_minimum = 3 # minimum depth to set values to NA#
# load data#
cells_aggregate_info <- readRDS(file=paste0("cells_aggregate_info.rds"))#
snpMut_filt_freq <- readRDS(file=paste0("snpMut_filt_freq.rds"))#
depth = as.matrix(read.table("final_data_depth.txt"))#
#
# select only verified mutations#
snpMut_filt_freq = snpMut_filt_freq[which(snpMut_filt_freq$Gene%in%verified_genes),c("scID","Time","Gene","Chr","PosStart","PosEnd","REF","ALT","MutType","depth","Allele_Ratio")]#
snpMut_filt_freq = snpMut_filt_freq[order(snpMut_filt_freq[,3],snpMut_filt_freq[,4],snpMut_filt_freq[,5],snpMut_filt_freq[,6],snpMut_filt_freq[,7],snpMut_filt_freq[,8],snpMut_filt_freq[,9],snpMut_filt_freq[,1],snpMut_filt_freq[,2],snpMut_filt_freq[,10],snpMut_filt_freq[,11]),]#
#
# compute frequence of each mutation#
distinct_mutations = unique(snpMut_filt_freq[,c("Gene","Chr","PosStart","PosEnd","REF","ALT","ALT","ALT","ALT","ALT","ALT","ALT")])#
colnames(distinct_mutations)[7] = "FreqT1"#
colnames(distinct_mutations)[8] = "FreqT2"#
colnames(distinct_mutations)[9] = "FreqT3"#
colnames(distinct_mutations)[10] = "FreqT4"#
colnames(distinct_mutations)[11] = "MedianDepth"#
colnames(distinct_mutations)[12] = "MedianDepthMut"#
cells_timepoints = unique(snpMut_filt_freq[,c("scID","Time")])#
distinct_mutations$FreqT1 = NA#
distinct_mutations$FreqT2 = NA#
distinct_mutations$FreqT3 = NA#
distinct_mutations$FreqT4 = NA#
distinct_mutations$MedianDepth = NA#
distinct_mutations$MedianDepthMut = NA#
t1 = as.numeric(table(cells_timepoints$Time)["before treatment"])#
t2 = as.numeric(table(cells_timepoints$Time)["4d on treatment"])#
t3 = as.numeric(table(cells_timepoints$Time)["28d on treatment"])#
t4 = as.numeric(table(cells_timepoints$Time)["57d on treatment"])#
for(i in 1:nrow(distinct_mutations)) {#
    curr = snpMut_filt_freq[which(snpMut_filt_freq$Gene%in%distinct_mutations[i,"Gene"]&snpMut_filt_freq$Chr%in%distinct_mutations[i,"Chr"]&snpMut_filt_freq$PosStart%in%distinct_mutations[i,"PosStart"]&snpMut_filt_freq$PosEnd%in%distinct_mutations[i,"PosEnd"]&snpMut_filt_freq$REF%in%distinct_mutations[i,"REF"]&snpMut_filt_freq$ALT%in%distinct_mutations[i,"ALT"]),]#
    distinct_mutations[i,"FreqT1"] = as.numeric(table(curr$Time)["before treatment"]) / t1#
    distinct_mutations[i,"FreqT2"] = as.numeric(table(curr$Time)["4d on treatment"]) / t2#
    distinct_mutations[i,"FreqT3"] = as.numeric(table(curr$Time)["28d on treatment"]) / t3#
    distinct_mutations[i,"FreqT4"] = as.numeric(table(curr$Time)["57d on treatment"]) / t4#
    distinct_mutations[i,"MedianDepth"] = as.numeric(median(curr$depth))#
    distinct_mutations[i,"MedianDepthMut"] = as.numeric(median(curr$Allele_Ratio))#
}#
valid_distinct_mutations = distinct_mutations[c(1,2,5,6,7),]#
valid_distinct_mutations_values = NULL#
for(i in 1:nrow(valid_distinct_mutations)) {#
    valid_distinct_mutations_values = c(valid_distinct_mutations_values,paste0(valid_distinct_mutations[i,c("Chr","PosStart")],collapse="_"))#
}
# make final mutations data structures#
mutations = array(0,c(length(unique(cells_aggregate_info$scID)),5))#
rownames(mutations) = sort(unique(cells_aggregate_info$scID))#
colnames(mutations) = paste0(valid_distinct_mutations$Gene,"_",valid_distinct_mutations_values,"_",valid_distinct_mutations$REF,"_",valid_distinct_mutations$ALT)#
for(i in 1:nrow(valid_distinct_mutations)) {#
	curr_gene = valid_distinct_mutations[i,"Gene"]#
	curr_chr = valid_distinct_mutations[i,"Chr"]#
	curr_start = valid_distinct_mutations[i,"PosStart"]#
	curr_end = valid_distinct_mutations[i,"PosEnd"]#
	curr_ref = valid_distinct_mutations[i,"REF"]#
	curr_alt = valid_distinct_mutations[i,"ALT"]#
	curr_mutant_cells = which(cells_aggregate_info$Gene==curr_gene&cells_aggregate_info$Chr==curr_chr&cells_aggregate_info$PosStart==curr_start&cells_aggregate_info$PosEnd==curr_end&cells_aggregate_info$REF==curr_ref&cells_aggregate_info$ALT==curr_alt)#
	curr_mutant_cells = cells_aggregate_info$scID[curr_mutant_cells]#
	mutations[curr_mutant_cells,i] = 1#
}
head(depth[,valid_distinct_mutations_values])
colnames(depth)
dim() depth
dim(depth)
# set NA values#
depth = t(depth)#
depth = depth[,valid_distinct_mutations_values]
dim(depth)
dim(mutations)
# load required libraries#
library("TRONCO")#
#
# list of manually verified mutations#
verified_genes = c("ARPC2","COL1A2","PCBP1","PRAME","RPL5")#
depth_minimum = 3 # minimum depth to set values to NA#
# load data#
cells_aggregate_info <- readRDS(file=paste0("cells_aggregate_info.rds"))#
snpMut_filt_freq <- readRDS(file=paste0("snpMut_filt_freq.rds"))#
depth = as.matrix(read.table("final_data_depth.txt"))#
#
# select only verified mutations#
snpMut_filt_freq = snpMut_filt_freq[which(snpMut_filt_freq$Gene%in%verified_genes),c("scID","Time","Gene","Chr","PosStart","PosEnd","REF","ALT","MutType","depth","Allele_Ratio")]#
snpMut_filt_freq = snpMut_filt_freq[order(snpMut_filt_freq[,3],snpMut_filt_freq[,4],snpMut_filt_freq[,5],snpMut_filt_freq[,6],snpMut_filt_freq[,7],snpMut_filt_freq[,8],snpMut_filt_freq[,9],snpMut_filt_freq[,1],snpMut_filt_freq[,2],snpMut_filt_freq[,10],snpMut_filt_freq[,11]),]#
#
# compute frequence of each mutation#
distinct_mutations = unique(snpMut_filt_freq[,c("Gene","Chr","PosStart","PosEnd","REF","ALT","ALT","ALT","ALT","ALT","ALT","ALT")])#
colnames(distinct_mutations)[7] = "FreqT1"#
colnames(distinct_mutations)[8] = "FreqT2"#
colnames(distinct_mutations)[9] = "FreqT3"#
colnames(distinct_mutations)[10] = "FreqT4"#
colnames(distinct_mutations)[11] = "MedianDepth"#
colnames(distinct_mutations)[12] = "MedianDepthMut"#
cells_timepoints = unique(snpMut_filt_freq[,c("scID","Time")])#
distinct_mutations$FreqT1 = NA#
distinct_mutations$FreqT2 = NA#
distinct_mutations$FreqT3 = NA#
distinct_mutations$FreqT4 = NA#
distinct_mutations$MedianDepth = NA#
distinct_mutations$MedianDepthMut = NA#
t1 = as.numeric(table(cells_timepoints$Time)["before treatment"])#
t2 = as.numeric(table(cells_timepoints$Time)["4d on treatment"])#
t3 = as.numeric(table(cells_timepoints$Time)["28d on treatment"])#
t4 = as.numeric(table(cells_timepoints$Time)["57d on treatment"])#
for(i in 1:nrow(distinct_mutations)) {#
    curr = snpMut_filt_freq[which(snpMut_filt_freq$Gene%in%distinct_mutations[i,"Gene"]&snpMut_filt_freq$Chr%in%distinct_mutations[i,"Chr"]&snpMut_filt_freq$PosStart%in%distinct_mutations[i,"PosStart"]&snpMut_filt_freq$PosEnd%in%distinct_mutations[i,"PosEnd"]&snpMut_filt_freq$REF%in%distinct_mutations[i,"REF"]&snpMut_filt_freq$ALT%in%distinct_mutations[i,"ALT"]),]#
    distinct_mutations[i,"FreqT1"] = as.numeric(table(curr$Time)["before treatment"]) / t1#
    distinct_mutations[i,"FreqT2"] = as.numeric(table(curr$Time)["4d on treatment"]) / t2#
    distinct_mutations[i,"FreqT3"] = as.numeric(table(curr$Time)["28d on treatment"]) / t3#
    distinct_mutations[i,"FreqT4"] = as.numeric(table(curr$Time)["57d on treatment"]) / t4#
    distinct_mutations[i,"MedianDepth"] = as.numeric(median(curr$depth))#
    distinct_mutations[i,"MedianDepthMut"] = as.numeric(median(curr$Allele_Ratio))#
}#
valid_distinct_mutations = distinct_mutations[c(1,2,5,6,7),]#
valid_distinct_mutations_values = NULL#
for(i in 1:nrow(valid_distinct_mutations)) {#
    valid_distinct_mutations_values = c(valid_distinct_mutations_values,paste0(valid_distinct_mutations[i,c("Chr","PosStart")],collapse="_"))#
}
# make final mutations data structures#
mutations = array(0,c(length(unique(cells_aggregate_info$scID)),5))#
rownames(mutations) = sort(unique(cells_aggregate_info$scID))#
colnames(mutations) = paste0(valid_distinct_mutations$Gene,"_",valid_distinct_mutations_values,"_",valid_distinct_mutations$REF,"_",valid_distinct_mutations$ALT)#
for(i in 1:nrow(valid_distinct_mutations)) {#
	curr_gene = valid_distinct_mutations[i,"Gene"]#
	curr_chr = valid_distinct_mutations[i,"Chr"]#
	curr_start = valid_distinct_mutations[i,"PosStart"]#
	curr_end = valid_distinct_mutations[i,"PosEnd"]#
	curr_ref = valid_distinct_mutations[i,"REF"]#
	curr_alt = valid_distinct_mutations[i,"ALT"]#
	curr_mutant_cells = which(cells_aggregate_info$Gene==curr_gene&cells_aggregate_info$Chr==curr_chr&cells_aggregate_info$PosStart==curr_start&cells_aggregate_info$PosEnd==curr_end&cells_aggregate_info$REF==curr_ref&cells_aggregate_info$ALT==curr_alt)#
	curr_mutant_cells = cells_aggregate_info$scID[curr_mutant_cells]#
	mutations[curr_mutant_cells,i] = 1#
}#
# set NA values#
depth = t(depth)#
depth = depth[,valid_distinct_mutations_values]#
depth = depth[rownames(mutations),]#
colnames(depth) = colnames(mutations)
head(depth)
dim(depth)
dim(mutations)
all(colnames(depth)==colnames(mutations))
all(rownames(depth)== rownames(mutations))
mutations[which(depth<=depth_minimum,arr.ind=TRUE)] = NA
length(which(is.na(mutations)))
dim(mutations)
674*5
668/3370
round(668/3370,2)
sort(unique(snpMut_filt_freq$scID[which(snpMut_filt_freq$Time=="before treatment")]))
mycellsdata = list()#
mycellsdata[["T1_before_treatment"]] = mutations[,sort(unique(snpMut_filt_freq$scID[which(snpMut_filt_freq$Time=="before treatment")]))])#
mycellsdata[["T2_4_days_treatment"]] = mutations[,sort(unique(snpMut_filt_freq$scID[which(snpMut_filt_freq$Time=="4d on treatment")]))])#
mycellsdata[["T3_28_days_treatment"]] = mutations[,sort(unique(snpMut_filt_freq$scID[which(snpMut_filt_freq$Time=="28d on treatment")]))])#
mycellsdata[["T4_57_days_treatment"]] = mutations[,sort(unique(snpMut_filt_freq$scID[which(snpMut_filt_freq$Time=="57d on treatment")]))])
mycellsdata = list()#
mycellsdata[["T1_before_treatment"]] = mutations[,sort(unique(snpMut_filt_freq$scID[which(snpMut_filt_freq$Time=="before treatment")]))]#
mycellsdata[["T2_4_days_treatment"]] = mutations[,sort(unique(snpMut_filt_freq$scID[which(snpMut_filt_freq$Time=="4d on treatment")]))]#
mycellsdata[["T3_28_days_treatment"]] = mutations[,sort(unique(snpMut_filt_freq$scID[which(snpMut_filt_freq$Time=="28d on treatment")]))]#
mycellsdata[["T4_57_days_treatment"]] = mutations[,sort(unique(snpMut_filt_freq$scID[which(snpMut_filt_freq$Time=="57d on treatment")]))]
# load required libraries#
library("TRONCO")#
#
# list of manually verified mutations#
verified_genes = c("ARPC2","COL1A2","PCBP1","PRAME","RPL5")#
depth_minimum = 3 # minimum depth to set values to NA#
# load data#
cells_aggregate_info <- readRDS(file=paste0("cells_aggregate_info.rds"))#
snpMut_filt_freq <- readRDS(file=paste0("snpMut_filt_freq.rds"))#
depth = as.matrix(read.table("final_data_depth.txt"))#
#
# select only verified mutations#
snpMut_filt_freq = snpMut_filt_freq[which(snpMut_filt_freq$Gene%in%verified_genes),c("scID","Time","Gene","Chr","PosStart","PosEnd","REF","ALT","MutType","depth","Allele_Ratio")]#
snpMut_filt_freq = snpMut_filt_freq[order(snpMut_filt_freq[,3],snpMut_filt_freq[,4],snpMut_filt_freq[,5],snpMut_filt_freq[,6],snpMut_filt_freq[,7],snpMut_filt_freq[,8],snpMut_filt_freq[,9],snpMut_filt_freq[,1],snpMut_filt_freq[,2],snpMut_filt_freq[,10],snpMut_filt_freq[,11]),]#
#
# compute frequence of each mutation#
distinct_mutations = unique(snpMut_filt_freq[,c("Gene","Chr","PosStart","PosEnd","REF","ALT","ALT","ALT","ALT","ALT","ALT","ALT")])#
colnames(distinct_mutations)[7] = "FreqT1"#
colnames(distinct_mutations)[8] = "FreqT2"#
colnames(distinct_mutations)[9] = "FreqT3"#
colnames(distinct_mutations)[10] = "FreqT4"#
colnames(distinct_mutations)[11] = "MedianDepth"#
colnames(distinct_mutations)[12] = "MedianDepthMut"#
cells_timepoints = unique(snpMut_filt_freq[,c("scID","Time")])#
distinct_mutations$FreqT1 = NA#
distinct_mutations$FreqT2 = NA#
distinct_mutations$FreqT3 = NA#
distinct_mutations$FreqT4 = NA#
distinct_mutations$MedianDepth = NA#
distinct_mutations$MedianDepthMut = NA#
t1 = as.numeric(table(cells_timepoints$Time)["before treatment"])#
t2 = as.numeric(table(cells_timepoints$Time)["4d on treatment"])#
t3 = as.numeric(table(cells_timepoints$Time)["28d on treatment"])#
t4 = as.numeric(table(cells_timepoints$Time)["57d on treatment"])#
for(i in 1:nrow(distinct_mutations)) {#
    curr = snpMut_filt_freq[which(snpMut_filt_freq$Gene%in%distinct_mutations[i,"Gene"]&snpMut_filt_freq$Chr%in%distinct_mutations[i,"Chr"]&snpMut_filt_freq$PosStart%in%distinct_mutations[i,"PosStart"]&snpMut_filt_freq$PosEnd%in%distinct_mutations[i,"PosEnd"]&snpMut_filt_freq$REF%in%distinct_mutations[i,"REF"]&snpMut_filt_freq$ALT%in%distinct_mutations[i,"ALT"]),]#
    distinct_mutations[i,"FreqT1"] = as.numeric(table(curr$Time)["before treatment"]) / t1#
    distinct_mutations[i,"FreqT2"] = as.numeric(table(curr$Time)["4d on treatment"]) / t2#
    distinct_mutations[i,"FreqT3"] = as.numeric(table(curr$Time)["28d on treatment"]) / t3#
    distinct_mutations[i,"FreqT4"] = as.numeric(table(curr$Time)["57d on treatment"]) / t4#
    distinct_mutations[i,"MedianDepth"] = as.numeric(median(curr$depth))#
    distinct_mutations[i,"MedianDepthMut"] = as.numeric(median(curr$Allele_Ratio))#
}#
valid_distinct_mutations = distinct_mutations[c(1,2,5,6,7),]#
valid_distinct_mutations_values = NULL#
for(i in 1:nrow(valid_distinct_mutations)) {#
    valid_distinct_mutations_values = c(valid_distinct_mutations_values,paste0(valid_distinct_mutations[i,c("Chr","PosStart")],collapse="_"))#
}#
save(valid_distinct_mutations,file="valid_distinct_mutations.RData")#
#
# make final mutations data structures#
mutations = array(0,c(length(unique(cells_aggregate_info$scID)),5))#
rownames(mutations) = sort(unique(cells_aggregate_info$scID))#
colnames(mutations) = paste0(valid_distinct_mutations$Gene,"_",valid_distinct_mutations_values,"_",valid_distinct_mutations$REF,"_",valid_distinct_mutations$ALT)#
for(i in 1:nrow(valid_distinct_mutations)) {#
	curr_gene = valid_distinct_mutations[i,"Gene"]#
	curr_chr = valid_distinct_mutations[i,"Chr"]#
	curr_start = valid_distinct_mutations[i,"PosStart"]#
	curr_end = valid_distinct_mutations[i,"PosEnd"]#
	curr_ref = valid_distinct_mutations[i,"REF"]#
	curr_alt = valid_distinct_mutations[i,"ALT"]#
	curr_mutant_cells = which(cells_aggregate_info$Gene==curr_gene&cells_aggregate_info$Chr==curr_chr&cells_aggregate_info$PosStart==curr_start&cells_aggregate_info$PosEnd==curr_end&cells_aggregate_info$REF==curr_ref&cells_aggregate_info$ALT==curr_alt)#
	curr_mutant_cells = cells_aggregate_info$scID[curr_mutant_cells]#
	mutations[curr_mutant_cells,i] = 1#
}#
# set NA values#
depth = t(depth)#
depth = depth[,valid_distinct_mutations_values]#
depth = depth[rownames(mutations),]#
colnames(depth) = colnames(mutations)#
mutations[which(depth<=depth_minimum,arr.ind=TRUE)] = NA # missing values rate equals to 668/3370, that is approx 20% #
mycellsdata = list()
mycellsdata = list()#
mycellsdata[["T1_before_treatment"]] = mutations[sort(unique(snpMut_filt_freq$scID[which(snpMut_filt_freq$Time=="before treatment")])),]#
mycellsdata[["T2_4_days_treatment"]] = mutations[sort(unique(snpMut_filt_freq$scID[which(snpMut_filt_freq$Time=="4d on treatment")])),]#
mycellsdata[["T3_28_days_treatment"]] = mutations[sort(unique(snpMut_filt_freq$scID[which(snpMut_filt_freq$Time=="28d on treatment")])),]#
mycellsdata[["T4_57_days_treatment"]] = mutations[sort(unique(snpMut_filt_freq$scID[which(snpMut_filt_freq$Time=="57d on treatment")])),]
dim(mycellsdata[[1]])
dim(mycellsdata[[2]])
dim(mycellsdata[[3]])
dim(mycellsdata[[4]])
165+138+167+141
head(cells_aggregate_info)
# load required libraries#
library("TRONCO")#
#
# list of manually verified mutations#
verified_genes = c("ARPC2","COL1A2","PCBP1","PRAME","RPL5")#
depth_minimum = 3 # minimum depth to set values to NA#
# load data#
cells_aggregate_info <- readRDS(file=paste0("cells_aggregate_info.rds"))#
snpMut_filt_freq <- readRDS(file=paste0("snpMut_filt_freq.rds"))#
depth = as.matrix(read.table("final_data_depth.txt"))#
#
# select only verified mutations#
snpMut_filt_freq = snpMut_filt_freq[which(snpMut_filt_freq$Gene%in%verified_genes),c("scID","Time","Gene","Chr","PosStart","PosEnd","REF","ALT","MutType","depth","Allele_Ratio")]#
snpMut_filt_freq = snpMut_filt_freq[order(snpMut_filt_freq[,3],snpMut_filt_freq[,4],snpMut_filt_freq[,5],snpMut_filt_freq[,6],snpMut_filt_freq[,7],snpMut_filt_freq[,8],snpMut_filt_freq[,9],snpMut_filt_freq[,1],snpMut_filt_freq[,2],snpMut_filt_freq[,10],snpMut_filt_freq[,11]),]#
#
# compute frequence of each mutation#
distinct_mutations = unique(snpMut_filt_freq[,c("Gene","Chr","PosStart","PosEnd","REF","ALT","ALT","ALT","ALT","ALT","ALT","ALT")])#
colnames(distinct_mutations)[7] = "FreqT1"#
colnames(distinct_mutations)[8] = "FreqT2"#
colnames(distinct_mutations)[9] = "FreqT3"#
colnames(distinct_mutations)[10] = "FreqT4"#
colnames(distinct_mutations)[11] = "MedianDepth"#
colnames(distinct_mutations)[12] = "MedianDepthMut"#
cells_timepoints = unique(snpMut_filt_freq[,c("scID","Time")])#
distinct_mutations$FreqT1 = NA#
distinct_mutations$FreqT2 = NA#
distinct_mutations$FreqT3 = NA#
distinct_mutations$FreqT4 = NA#
distinct_mutations$MedianDepth = NA#
distinct_mutations$MedianDepthMut = NA#
t1 = as.numeric(table(cells_timepoints$Time)["before treatment"])#
t2 = as.numeric(table(cells_timepoints$Time)["4d on treatment"])#
t3 = as.numeric(table(cells_timepoints$Time)["28d on treatment"])#
t4 = as.numeric(table(cells_timepoints$Time)["57d on treatment"])#
for(i in 1:nrow(distinct_mutations)) {#
    curr = snpMut_filt_freq[which(snpMut_filt_freq$Gene%in%distinct_mutations[i,"Gene"]&snpMut_filt_freq$Chr%in%distinct_mutations[i,"Chr"]&snpMut_filt_freq$PosStart%in%distinct_mutations[i,"PosStart"]&snpMut_filt_freq$PosEnd%in%distinct_mutations[i,"PosEnd"]&snpMut_filt_freq$REF%in%distinct_mutations[i,"REF"]&snpMut_filt_freq$ALT%in%distinct_mutations[i,"ALT"]),]#
    distinct_mutations[i,"FreqT1"] = as.numeric(table(curr$Time)["before treatment"]) / t1#
    distinct_mutations[i,"FreqT2"] = as.numeric(table(curr$Time)["4d on treatment"]) / t2#
    distinct_mutations[i,"FreqT3"] = as.numeric(table(curr$Time)["28d on treatment"]) / t3#
    distinct_mutations[i,"FreqT4"] = as.numeric(table(curr$Time)["57d on treatment"]) / t4#
    distinct_mutations[i,"MedianDepth"] = as.numeric(median(curr$depth))#
    distinct_mutations[i,"MedianDepthMut"] = as.numeric(median(curr$Allele_Ratio))#
}#
valid_distinct_mutations = distinct_mutations[c(1,2,5,6,7),]#
valid_distinct_mutations_values = NULL#
for(i in 1:nrow(valid_distinct_mutations)) {#
    valid_distinct_mutations_values = c(valid_distinct_mutations_values,paste0(valid_distinct_mutations[i,c("Chr","PosStart")],collapse="_"))#
}#
save(valid_distinct_mutations,file="valid_distinct_mutations.RData")#
#
# make final mutations data structures#
mutations = array(0,c(length(unique(cells_aggregate_info$scID)),5))#
rownames(mutations) = sort(unique(cells_aggregate_info$scID))#
colnames(mutations) = paste0(valid_distinct_mutations$Gene,"_",valid_distinct_mutations_values,"_",valid_distinct_mutations$REF,"_",valid_distinct_mutations$ALT)#
for(i in 1:nrow(valid_distinct_mutations)) {#
	curr_gene = valid_distinct_mutations[i,"Gene"]#
	curr_chr = valid_distinct_mutations[i,"Chr"]#
	curr_start = valid_distinct_mutations[i,"PosStart"]#
	curr_end = valid_distinct_mutations[i,"PosEnd"]#
	curr_ref = valid_distinct_mutations[i,"REF"]#
	curr_alt = valid_distinct_mutations[i,"ALT"]#
	curr_mutant_cells = which(cells_aggregate_info$Gene==curr_gene&cells_aggregate_info$Chr==curr_chr&cells_aggregate_info$PosStart==curr_start&cells_aggregate_info$PosEnd==curr_end&cells_aggregate_info$REF==curr_ref&cells_aggregate_info$ALT==curr_alt)#
	curr_mutant_cells = cells_aggregate_info$scID[curr_mutant_cells]#
	mutations[curr_mutant_cells,i] = 1#
}#
# set NA values#
depth = t(depth)#
depth = depth[,valid_distinct_mutations_values]#
depth = depth[rownames(mutations),]#
colnames(depth) = colnames(mutations)#
mutations[which(depth<=depth_minimum,arr.ind=TRUE)] = NA # missing values rate equals to 668/3370, that is approx 20% #
mycellsdata = list()#
mycellsdata[["T1_before_treatment"]] = mutations[sort(unique(cells_aggregate_info$scID[which(cells_aggregate_info$Time=="before treatment")])),]#
mycellsdata[["T2_4_days_treatment"]] = mutations[sort(unique(cells_aggregate_info$scID[which(cells_aggregate_info$Time=="4d on treatment")])),]#
mycellsdata[["T3_28_days_treatment"]] = mutations[sort(unique(cells_aggregate_info$scID[which(cells_aggregate_info$Time=="28d on treatment")])),]#
mycellsdata[["T4_57_days_treatment"]] = mutations[sort(unique(cells_aggregate_info$scID[which(cells_aggregate_info$Time=="57d on treatment")])),]
dim(mycellsdata[[1]])
dim(mycellsdata[[2]])
dim(mycellsdata[[3]])
dim(mycellsdata[[4]])
dim(mycellsdata[[]])
172+155+199+148
plot(1)
# load required libraries#
library("TRONCO")#
#
# list of manually verified mutations#
verified_genes = c("ARPC2","COL1A2","PCBP1","PRAME","RPL5")#
depth_minimum = 3 # minimum depth to set values to NA#
# load data#
cells_aggregate_info <- readRDS(file=paste0("cells_aggregate_info.rds"))#
snpMut_filt_freq <- readRDS(file=paste0("snpMut_filt_freq.rds"))#
depth = as.matrix(read.table("final_data_depth.txt"))#
#
# select only verified mutations#
snpMut_filt_freq = snpMut_filt_freq[which(snpMut_filt_freq$Gene%in%verified_genes),c("scID","Time","Gene","Chr","PosStart","PosEnd","REF","ALT","MutType","depth","Allele_Ratio")]#
snpMut_filt_freq = snpMut_filt_freq[order(snpMut_filt_freq[,3],snpMut_filt_freq[,4],snpMut_filt_freq[,5],snpMut_filt_freq[,6],snpMut_filt_freq[,7],snpMut_filt_freq[,8],snpMut_filt_freq[,9],snpMut_filt_freq[,1],snpMut_filt_freq[,2],snpMut_filt_freq[,10],snpMut_filt_freq[,11]),]#
#
# compute frequence of each mutation#
distinct_mutations = unique(snpMut_filt_freq[,c("Gene","Chr","PosStart","PosEnd","REF","ALT","ALT","ALT","ALT","ALT","ALT","ALT")])#
colnames(distinct_mutations)[7] = "FreqT1"#
colnames(distinct_mutations)[8] = "FreqT2"#
colnames(distinct_mutations)[9] = "FreqT3"#
colnames(distinct_mutations)[10] = "FreqT4"#
colnames(distinct_mutations)[11] = "MedianDepth"#
colnames(distinct_mutations)[12] = "MedianDepthMut"#
cells_timepoints = unique(snpMut_filt_freq[,c("scID","Time")])#
distinct_mutations$FreqT1 = NA#
distinct_mutations$FreqT2 = NA#
distinct_mutations$FreqT3 = NA#
distinct_mutations$FreqT4 = NA#
distinct_mutations$MedianDepth = NA#
distinct_mutations$MedianDepthMut = NA#
t1 = as.numeric(table(cells_timepoints$Time)["before treatment"])#
t2 = as.numeric(table(cells_timepoints$Time)["4d on treatment"])#
t3 = as.numeric(table(cells_timepoints$Time)["28d on treatment"])#
t4 = as.numeric(table(cells_timepoints$Time)["57d on treatment"])#
for(i in 1:nrow(distinct_mutations)) {#
    curr = snpMut_filt_freq[which(snpMut_filt_freq$Gene%in%distinct_mutations[i,"Gene"]&snpMut_filt_freq$Chr%in%distinct_mutations[i,"Chr"]&snpMut_filt_freq$PosStart%in%distinct_mutations[i,"PosStart"]&snpMut_filt_freq$PosEnd%in%distinct_mutations[i,"PosEnd"]&snpMut_filt_freq$REF%in%distinct_mutations[i,"REF"]&snpMut_filt_freq$ALT%in%distinct_mutations[i,"ALT"]),]#
    distinct_mutations[i,"FreqT1"] = as.numeric(table(curr$Time)["before treatment"]) / t1#
    distinct_mutations[i,"FreqT2"] = as.numeric(table(curr$Time)["4d on treatment"]) / t2#
    distinct_mutations[i,"FreqT3"] = as.numeric(table(curr$Time)["28d on treatment"]) / t3#
    distinct_mutations[i,"FreqT4"] = as.numeric(table(curr$Time)["57d on treatment"]) / t4#
    distinct_mutations[i,"MedianDepth"] = as.numeric(median(curr$depth))#
    distinct_mutations[i,"MedianDepthMut"] = as.numeric(median(curr$Allele_Ratio))#
}#
valid_distinct_mutations = distinct_mutations[c(1,2,5,6,7),]#
valid_distinct_mutations_values = NULL#
for(i in 1:nrow(valid_distinct_mutations)) {#
    valid_distinct_mutations_values = c(valid_distinct_mutations_values,paste0(valid_distinct_mutations[i,c("Chr","PosStart")],collapse="_"))#
}#
save(valid_distinct_mutations,file="valid_distinct_mutations.RData")#
#
# make final mutations data structures#
mutations = array(0,c(length(unique(cells_aggregate_info$scID)),5))#
rownames(mutations) = sort(unique(cells_aggregate_info$scID))#
colnames(mutations) = paste0(valid_distinct_mutations$Gene,"_",valid_distinct_mutations_values,"_",valid_distinct_mutations$REF,"_",valid_distinct_mutations$ALT)#
for(i in 1:nrow(valid_distinct_mutations)) {#
    curr_gene = valid_distinct_mutations[i,"Gene"]#
    curr_chr = valid_distinct_mutations[i,"Chr"]#
    curr_start = valid_distinct_mutations[i,"PosStart"]#
    curr_end = valid_distinct_mutations[i,"PosEnd"]#
    curr_ref = valid_distinct_mutations[i,"REF"]#
    curr_alt = valid_distinct_mutations[i,"ALT"]#
    curr_mutant_cells = which(cells_aggregate_info$Gene==curr_gene&cells_aggregate_info$Chr==curr_chr&cells_aggregate_info$PosStart==curr_start&cells_aggregate_info$PosEnd==curr_end&cells_aggregate_info$REF==curr_ref&cells_aggregate_info$ALT==curr_alt)#
    curr_mutant_cells = cells_aggregate_info$scID[curr_mutant_cells]#
    mutations[curr_mutant_cells,i] = 1#
}#
# set NA values#
depth = t(depth)#
depth = depth[,valid_distinct_mutations_values]#
depth = depth[rownames(mutations),]#
colnames(depth) = colnames(mutations)#
mutations[which(depth<=depth_minimum,arr.ind=TRUE)] = NA # missing values rate equals to 668/3370, that is approx 20% #
# make final data#
mycellsdata = list()#
mycellsdata[["T1_before_treatment"]] = mutations[sort(unique(cells_aggregate_info$scID[which(cells_aggregate_info$Time=="before treatment")])),]#
mycellsdata[["T2_4_days_treatment"]] = mutations[sort(unique(cells_aggregate_info$scID[which(cells_aggregate_info$Time=="4d on treatment")])),]#
mycellsdata[["T3_28_days_treatment"]] = mutations[sort(unique(cells_aggregate_info$scID[which(cells_aggregate_info$Time=="28d on treatment")])),]#
mycellsdata[["T4_57_days_treatment"]] = mutations[sort(unique(cells_aggregate_info$scID[which(cells_aggregate_info$Time=="57d on treatment")])),]#
D = mycellsdata#
save(D,file="D.RData")#
# make Oncoprint
D
dim(D[[1]])
dim(D[[2]])
dim(D[[3]])
dim(D[[4]])
clusters = array(NA,c((nrow(D[[1]])+nrow(D[[2]])+nrow(D[[3]])+nrow(D[[4]])),1))#
clusters[1:nrow(D[[1]]),1] = "T1_before_treatment"#
clusters[(nrow(D[[1]])+1):(nrow(D[[1]])+nrow(D[[2]])),1] = "T2_4_days_treatment"#
clusters[(nrow(D[[1]])+nrow(D[[2]])+1):(nrow(D[[1]])+nrow(D[[2]])+nrow(D[[3]])),1] = "T3_28_days_treatment"#
clusters[(nrow(D[[1]])+nrow(D[[2]])+nrow(D[[3]])+1):(nrow(D[[1]])+nrow(D[[2]])+nrow(D[[3]])+nrow(D[[4]])),1] = "T4_57_days_treatment"#
rownames(clusters) = c(rownames(D[[1]]),rownames(D[[2]]),rownames(D[[3]]),rownames(D[[4]]))#
data = rbind(D[[1]],D[[2]],D[[3]],D[[4]])#
data[which(is.na(data))] = 0#
data = import.genotypes(data)#
data = annotate.stages(data,clusters)
oncoprint(data,excl.sort=FALSE,group.by.stage=TRUE)
